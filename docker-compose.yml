version: '3.3'

services:
  my-community:
    env_file: .docker.env
    network_mode: host
    container_name: backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
    ports:
      - ${SERVER_PORT}
    volumes:
      - ./public:/var/nodex/public
      - ./locales:/var/nodex/locales
  my-community-beta:
    env_file: .docker.beta.env
    network_mode: host
    container_name: backend-beta
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
    ports:
      - ${SERVER_PORT}
    volumes:
      - ./public:/var/nodex/public
      - ./locales:/var/nodex/locales
  redis-server:
    env_file: .docker.env
    image: redis:4.0.11-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ~/.data/redis:/data
  mariadb:
    env_file: .docker.env
    image: mariadb:10.3.10
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ~/.data/mariadb:/var/lib/mysql
  mongo-db:
    env_file: .docker.env
    image: mongo:4.0.3
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_NAME}
      MONGODB_PORT: ${MONGODB_PORT}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    volumes:
      - ~/.data/mongodb:/data/db
      - ./scripts/mongo:/docker-entrypoint-initdb.d
  adminer:
    env_file: .docker.env
    depends_on:
      - mariadb
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
